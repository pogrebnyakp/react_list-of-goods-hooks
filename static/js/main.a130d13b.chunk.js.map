{"version":3,"sources":["ProductsList.tsx","App.tsx","index.tsx"],"names":["ProductsList","products","map","product","goodsFromServer","App","useState","isVisible","setVisibeled","isReversed","setReversed","sortedBy","setSortedBy","className","type","onClick","copyProducts","sort","productA","productB","localeCompare","length","reverse","prepareProducts","ReactDOM","render","document","getElementById"],"mappings":"kNAMaA,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,OACE,6BACIA,EAASC,KAAI,SAAAC,GAAO,OACpB,6BACGA,GADMA,SCNXC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA4EaC,EAzEO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAuBA,OACE,sBAAKC,UAAU,MAAf,UACE,wCACEN,GACA,wBACEO,KAAK,SACLC,QAAS,kBAAMP,GAAa,IAF9B,mBAODD,GACC,qCACE,cAAC,EAAD,CAAcN,SAlCE,WACtB,IAAMe,EAAY,UAAOZ,GAiBzB,OAfAY,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQR,GACN,IAAK,WACH,OAAOO,EAASE,cAAcD,GAChC,IAAK,SACH,OAAOD,EAASG,OAASF,EAASE,OACpC,QACE,OAAO,MAITZ,GACFO,EAAaM,UAGRN,EAgBuBO,KACxB,wBACET,KAAK,SACLC,QAAS,kBAAML,GAAaD,IAF9B,oBAMA,wBACEK,KAAK,SACLC,QAAS,kBAAMH,EAAY,aAF7B,iCAMA,wBACEE,KAAK,SACLC,QAAS,kBAAMH,EAAY,WAF7B,4BAMA,wBACEE,KAAK,SACLC,QAAS,WACPL,GAAY,GACZE,EAAY,KAJhB,0BCxEVY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a130d13b.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  products: string[]\n};\n\nexport const ProductsList: React.FC<Props> = ({ products }) => {\n  return (\n    <ul>\n      { products.map(product => (\n        <li key={product}>\n          {product}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { ProductsList } from './ProductsList';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setVisibeled] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortedBy, setSortedBy] = useState('');\n\n  const prepareProducts = () => {\n    const copyProducts = [...goodsFromServer];\n\n    copyProducts.sort((productA, productB) => {\n      switch (sortedBy) {\n        case 'alphabet':\n          return productA.localeCompare(productB);\n        case 'length':\n          return productA.length - productB.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyProducts.reverse();\n    }\n\n    return copyProducts;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!isVisible && (\n        <button\n          type=\"button\"\n          onClick={() => setVisibeled(true)}\n        >\n          Start\n        </button>\n      )}\n      {isVisible && (\n        <>\n          <ProductsList products={prepareProducts()} />\n          <button\n            type=\"button\"\n            onClick={() => setReversed(!isReversed)}\n          >\n            Revers\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setSortedBy('alphabet')}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setSortedBy('length')}\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setReversed(false);\n              setSortedBy('');\n            }}\n          >\n            Reset\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}